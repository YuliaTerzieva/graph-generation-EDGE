Traceback (most recent call last):
  File "<string>", line 1, in <module>
  File "/Users/yuliaterzieva/anaconda3/envs/MSCThesis/lib/python3.11/multiprocessing/spawn.py", line 122, in spawn_main
    exitcode = _main(fd, parent_sentinel)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuliaterzieva/anaconda3/envs/MSCThesis/lib/python3.11/multiprocessing/spawn.py", line 131, in _main
    prepare(preparation_data)
  File "/Users/yuliaterzieva/anaconda3/envs/MSCThesis/lib/python3.11/multiprocessing/spawn.py", line 246, in prepare
    _fixup_main_from_path(data['init_main_from_path'])
  File "/Users/yuliaterzieva/anaconda3/envs/MSCThesis/lib/python3.11/multiprocessing/spawn.py", line 297, in _fixup_main_from_path
    main_content = runpy.run_path(main_path,
                   ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "<frozen runpy>", line 291, in run_path
  File "<frozen runpy>", line 98, in _run_module_code
  File "<frozen runpy>", line 88, in _run_code
  File "/Users/yuliaterzieva/Desktop/Thesis - Diffusion/Code/MScThesis/EDGE/train.py", line 92, in <module>
    exp.run()
  File "/Users/yuliaterzieva/Desktop/Thesis - Diffusion/Code/MScThesis/EDGE/diffusion/experiment.py", line 154, in run
    super(DiffusionExperiment, self).run(epochs=self.args.epochs)
  File "/Users/yuliaterzieva/Desktop/Thesis - Diffusion/Code/MScThesis/EDGE/diffusion/base.py", line 181, in run
    train_dict = self.train_fn(epoch)
                 ^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuliaterzieva/Desktop/Thesis - Diffusion/Code/MScThesis/EDGE/experiment.py", line 28, in train_fn
    for pyg_data in self.train_loader:
  File "/Users/yuliaterzieva/anaconda3/envs/MSCThesis/lib/python3.11/site-packages/torch/utils/data/dataloader.py", line 484, in __iter__
    return self._get_iterator()
           ^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuliaterzieva/anaconda3/envs/MSCThesis/lib/python3.11/site-packages/torch/utils/data/dataloader.py", line 415, in _get_iterator
    return _MultiProcessingDataLoaderIter(self)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuliaterzieva/anaconda3/envs/MSCThesis/lib/python3.11/site-packages/torch/utils/data/dataloader.py", line 1138, in __init__
    w.start()
  File "/Users/yuliaterzieva/anaconda3/envs/MSCThesis/lib/python3.11/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
                  ^^^^^^^^^^^^^^^^^
  File "/Users/yuliaterzieva/anaconda3/envs/MSCThesis/lib/python3.11/multiprocessing/context.py", line 224, in _Popen
    return _default_context.get_context().Process._Popen(process_obj)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuliaterzieva/anaconda3/envs/MSCThesis/lib/python3.11/multiprocessing/context.py", line 288, in _Popen
    return Popen(process_obj)
           ^^^^^^^^^^^^^^^^^^
  File "/Users/yuliaterzieva/anaconda3/envs/MSCThesis/lib/python3.11/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/Users/yuliaterzieva/anaconda3/envs/MSCThesis/lib/python3.11/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/Users/yuliaterzieva/anaconda3/envs/MSCThesis/lib/python3.11/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yuliaterzieva/anaconda3/envs/MSCThesis/lib/python3.11/multiprocessing/spawn.py", line 164, in get_preparation_data
    _check_not_importing_main()
  File "/Users/yuliaterzieva/anaconda3/envs/MSCThesis/lib/python3.11/multiprocessing/spawn.py", line 140, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError:
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.

        To fix this issue, refer to the "Safe importing of main module"
        section in https://docs.python.org/3/library/multiprocessing.html

